---
- name: create gitlab home directories
  file:
    path: "./{{ item }}"
    state: directory
    owner: centos
    group: centos
  loop:
    - gitlab/config
    - gitlab/logs
    - gitlab/
    - gitlab-runner/config
    - gitlab-runner/docker.sock

#- name: start gitlab container
#  docker_container:
#    name: gitlab
#    image: gitlab/gitlab-ee:latest
#    restart: yes
#    recreate: yes
#    privileged: yes
#    exposed:
#      - 443
#      - 80
#      - 22
#    ports:
#      - 443:443
#      - 80:80
#      - 22:22
#    volumes:
#      - ./gitlab/config:/etc/gitlab:Z
#      - ./gitlab/logs:/var/log/gitlab:Z
#      - ./gitlab/data:/var/opt/gitlab:Z

- name: wait for gitlab to be healthy
  shell: '[[ `docker ps | grep -e gitlab$ | grep \(healthy\)` ]] && echo 0 || echo 1'
  register: result
  until: result.stdout == "0"
  retries: 1000
  delay: 10

#- name: delete existing runner
#  shell: '[[ `docker ps | grep -e gitlab-runner$` ]] && docker rm -f gitlab-runner'

#- name: install gitlab runner
#  docker_container:
#    name: gitlab-runner
#    image: gitlab/gitlab-runner:latest
#    restart: yes
#    recreate: yes
#    volumes:
#      - ./gitlab-runner/config:/etc/gitlab-runner
#      - ./gitlab-runner/docker.sock:/var/run/docker.sock

- name: Installation d'un runner Gitlab
  command: "docker run -d --name gitlab-runner --recreate --restart always \
  -v './gitlab-runner/config:/etc/gitlab-runner' \
  -v './gitlab-runner/docker.sock:/var/run/docker.sock' \
  gitlab/gitlab-runner:latest"

- name: Enregistrement du runner
  command: 'docker exec -it gitlab-runner gitlab-runner register --non-interactive \
  --executor "docker" \
  --docker-image alpine:latest \
  --url "http://15.228.93.207/" \
  --registration-token "4k2zjCr_UizC5KyNjpQT" \
  --description "docker-runner" \
  --tag-list "docker,aws" \
  --run-untagged="true" \
  --locked="false" \
  --access-level="not_protected"'
...